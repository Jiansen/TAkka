{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang2057\deflangfe2057\themelang2057\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f24\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050203030202}Mangal;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\f38\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f200\fbidi \froman\fcharset0\fprq2{\*\panose 00000000000000000000}Liberation Serif{\*\falt Times New Roman};}{\f201\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Liberation Sans{\*\falt Arial};}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f204\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\f205\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f207\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f208\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f209\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f210\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f211\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f212\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f224\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}
{\f225\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f227\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f228\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f229\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f230\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f231\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f232\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f544\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}
{\f545\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f547\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f548\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f551\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}
{\f552\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}{\f584\fbidi \fswiss\fcharset238\fprq2 Tahoma CE;}{\f585\fbidi \fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f587\fbidi \fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f588\fbidi \fswiss\fcharset162\fprq2 Tahoma Tur;}{\f589\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f590\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f591\fbidi \fswiss\fcharset186\fprq2 Tahoma Baltic;}
{\f592\fbidi \fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f593\fbidi \fswiss\fcharset222\fprq2 Tahoma (Thai);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}
{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\ctextone\ctint255\cshade255\red0\green0\blue0;
\red255\green255\blue255;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{
\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 \snext0 \sqformat \spriority0 Normal;}{
\s1\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs40\alang1025 \ltrch\fcs0 \b\fs40\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 
\sbasedon0 \snext25 \slink15 \sqformat heading 1;}{\s2\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 \slink16 \sqformat heading 2;}{\s3\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 
\ab\af0\afs32\alang1025 \ltrch\fcs0 \b\fs32\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 \slink17 \sqformat heading 3;}{
\s4\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\ilvl3\outlinelevel3\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 
\sbasedon0 \snext25 \slink18 \sqformat heading 4;}{\s5\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 \slink19 \sqformat heading 5;}{\s6\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\ilvl5\outlinelevel5\rin0\lin0\itap0 \rtlch\fcs1 
\ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 \slink20 \sqformat heading 6;}{\*\cs10 \additive Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang2057\langfe2057\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp2057\langfenp2057 
\snext11 \ssemihidden \sunhideused \sqformat Normal Table;}{\*\cs15 \additive \rtlch\fcs1 \ab\af24\afs29\alang1081 \ltrch\fcs0 \b\fs29\lang0\langfe2052\kerning32\loch\f31502\hich\af31502\dbch\af31501\langfenp2052 \sbasedon10 \slink1 \slocked \spriority9 
Heading 1 Char;}{\*\cs16 \additive \rtlch\fcs1 \ab\ai\af24\afs25\alang1081 \ltrch\fcs0 \b\i\fs25\lang0\langfe2052\kerning1\loch\f31502\hich\af31502\dbch\af31501\langfenp2052 \sbasedon10 \slink2 \slocked \ssemihidden \spriority9 Heading 2 Char;}{\*\cs17 
\additive \rtlch\fcs1 \ab\af24\afs23\alang1081 \ltrch\fcs0 \b\fs23\lang0\langfe2052\kerning1\loch\f31502\hich\af31502\dbch\af31501\langfenp2052 \sbasedon10 \slink3 \slocked \ssemihidden \spriority9 Heading 3 Char;}{\*\cs18 \additive \rtlch\fcs1 
\ab\af24\afs25\alang1081 \ltrch\fcs0 \b\fs25\lang0\langfe2052\kerning1\langfenp2052 \sbasedon10 \slink4 \slocked \ssemihidden \spriority9 Heading 4 Char;}{\*\cs19 \additive \rtlch\fcs1 \ab\ai\af24\afs23\alang1081 \ltrch\fcs0 
\b\i\fs23\lang0\langfe2052\kerning1\langfenp2052 \sbasedon10 \slink5 \slocked \ssemihidden \spriority9 Heading 5 Char;}{\*\cs20 \additive \rtlch\fcs1 \ab\af24\afs20\alang1081 \ltrch\fcs0 \b\fs20\lang0\langfe2052\kerning1\langfenp2052 
\sbasedon10 \slink6 \slocked \ssemihidden \spriority9 Heading 6 Char;}{\*\cs21 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super \sbasedon10 endnote reference;}{\*\cs22 \additive Endnote Characters;}{\*\cs23 \additive 
\ul\cf9\lang255\langfe255\langnp255\langfenp255 Internet Link;}{\s24\qj \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af201\afs28\alang1025 \ltrch\fcs0 
\fs28\lang2057\langfe2057\loch\f201\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 Heading;}{\s25\qj \li0\ri0\sa120\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 Text Body;}{\s26\ql \fi-283\li283\ri0\sa120\widctlpar\tx566\wrapdefault\faauto\rin0\lin283\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext26 List;}{\s27\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext27 \sqformat caption;}{\s28\qj \li0\ri0\widctlpar\noline\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext28 Index;}{\s29\qc \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs40\alang1025 \ltrch\fcs0 
\b\fs40\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext29 Part;}{\s30\qr \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext30 rightpar;}{\s31\qc \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext31 centerpar;}{\s32\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext32 equation;}{\s33\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext33 equationNum;}{\s34\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext34 equationAlign;}{\s35\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext35 equationAlignNum;}{\s36\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext36 equationArray;}{\s37\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext37 equationArrayNum;}{\s38\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext38 theorem;}{\s39\ql \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext39 bitmapCenter;}{\s40\qc \li0\ri0\sb240\sa240\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs36\alang1025 \ltrch\fcs0 
\b\fs36\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext25 \slink41 \sqformat Title;}{\*\cs41 \additive \rtlch\fcs1 \ab\af24\afs29\alang1081 \ltrch\fcs0 
\b\fs29\lang0\langfe2052\kerning28\loch\f31502\hich\af31502\dbch\af31501\langfenp2052 \sbasedon10 \slink40 \slocked \spriority10 Title Char;}{\s42\qc \li0\ri0\sa120\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext42 author;}{\s43\ql \li0\ri0\widctlpar\noline\tqc\tx4536\tqr\tx9072\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext43 \slink44 footer;}{\*\cs44 \additive \rtlch\fcs1 \af24\afs21\alang1081 \ltrch\fcs0 
\fs21\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon10 \slink43 \slocked \ssemihidden Footer Char;}{\s45\ql \li0\ri0\widctlpar\noline\tqc\tx4536\tqr\tx9072\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 
\ltrch\fcs0 \fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext45 \slink46 header;}{\*\cs46 \additive \rtlch\fcs1 \af24\afs21\alang1081 \ltrch\fcs0 
\fs21\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon10 \slink45 \slocked \ssemihidden Header Char;}{\s47\qc \li0\ri0\sb120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext47 Figure;}{\s48\qc \li0\ri0\sb120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext48 Table;}{\s49\qc \li0\ri0\sb120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext49 Tabular;}{\s50\qc \li0\ri0\sb120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext50 Tabbing;}{\s51\qj \fi340\li1024\ri1024\widctlpar\wrapdefault\faauto\rin1024\lin1024\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext51 \slink52 \sqformat Quote;}{\*\cs52 \additive \rtlch\fcs1 \ai\af24\afs21\alang1081 \ltrch\fcs0 
\i\fs21\cf17\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon10 \slink51 \slocked \spriority29 Quote Char;}{\s53\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af2\afs24\alang1081 \ltrch\fcs0 
\fs24\lang2057\langfe2052\kerning1\loch\f2\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 \snext53 verbatim;}{\s54\ql \fi-283\li283\ri0\sa120\widctlpar\tx566\wrapdefault\faauto\rin0\lin283\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext54 List 1;}{\s55\qc \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext55 latex picture;}{\s56\qc \li0\ri0\sb120\sa120\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext56 subfigure;}{\s57\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext57 bibheading;}{\s58\ql \fi-567\li567\ri0\widctlpar\wrapdefault\faauto\rin0\lin567\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext58 bibitem;}{\s59\ql \fi-283\li283\ri0\sa120\widctlpar\tx566\wrapdefault\faauto\rin0\lin283\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext59 endnotes;}{\s60\ql \fi-113\li397\ri0\widctlpar\wrapdefault\faauto\rin0\lin397\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext60 \slink61 footnote text;}{\*\cs61 \additive \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 
\fs18\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon10 \slink60 \slocked \ssemihidden Footnote Text Char;}{\s62\qj \fi-170\li454\ri0\widctlpar\wrapdefault\faauto\rin0\lin454\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext62 \slink63 endnote text;}{\*\cs63 \additive \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 
\fs18\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon10 \slink62 \slocked \ssemihidden Endnote Text Char;}{\s64\ql \li0\ri0\sb60\sa60\keepn\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 
\ltrch\fcs0 \fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext64 acronym;}{\s65\qc \li0\ri0\sa120\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext65 abstract title;}{\s66\qj \fi340\li1024\ri1024\widctlpar\wrapdefault\faauto\rin1024\lin1024\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext66 abstract;}{\s67\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 
\b\fs20\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext67 contents_heading;}{\s68\ql \li425\ri0\sb240\sa60\keepn\widctlpar\tqr\tldot\tx8647\wrapdefault\faauto\rin0\lin425\itap0 \rtlch\fcs1 
\ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext68 Contents 1;}{\s69\ql \li512\ri0\sb60\sa60\keepn\widctlpar\tqr\tldot\tx8734\wrapdefault\faauto\rin0\lin512\itap0 
\rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext69 Contents 2;}{\s70\ql \li1024\ri0\sb60\sa60\keepn\widctlpar
\tqr\tldot\tx9246\wrapdefault\faauto\rin0\lin1024\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext70 Contents 3;}{
\s71\ql \li1536\ri0\sb60\sa60\keepn\widctlpar\tqr\tldot\tx9758\wrapdefault\faauto\rin0\lin1536\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext71 
Contents 4;}{\s72\ql \li2048\ri0\sb60\sa60\keepn\widctlpar\tqr\tldot\tx10270\wrapdefault\faauto\rin0\lin2048\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 
\sbasedon0 \snext72 Contents 5;}{\s73\ql \li2560\ri0\sb60\sa60\keepn\widctlpar\tqr\tldot\tx10782\wrapdefault\faauto\rin0\lin2560\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang2057\langfe2057\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 \sbasedon0 \snext73 Contents 6;}{\*\cs74 \additive \rtlch\fcs1 \af0\afs16 \ltrch\fcs0 \fs16 \sbasedon10 \ssemihidden \sunhideused \styrsid8278902 annotation reference;}{
\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 
\sbasedon0 \snext75 \slink76 \ssemihidden \sunhideused \styrsid8278902 annotation text;}{\*\cs76 \additive \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs18\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 
\sbasedon10 \slink75 \slocked \ssemihidden \styrsid8278902 Comment Text Char;}{\s77\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \ab\af24\afs18\alang1081 \ltrch\fcs0 
\b\fs20\lang2057\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 \sbasedon75 \snext75 \slink78 \ssemihidden \sunhideused \styrsid8278902 annotation subject;}{\*\cs78 \additive \rtlch\fcs1 \ab\af24\afs18\alang1081 \ltrch\fcs0 
\b\fs18\lang0\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\langfenp2052 \sbasedon76 \slink77 \slocked \ssemihidden \styrsid8278902 Comment Subject Char;}{\s79\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\rtlch\fcs1 \af24\afs21\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\f0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 \snext79 \shidden \ssemihidden \styrsid8278902 Revision;}{
\s80\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs14\alang1081 \ltrch\fcs0 \f38\fs16\lang2057\langfe2052\kerning1\cgrid\langnp2057\langfenp2052 \sbasedon0 \snext80 \slink81 \ssemihidden \sunhideused \styrsid8278902 
Balloon Text;}{\*\cs81 \additive \rtlch\fcs1 \af24\afs14\alang1081 \ltrch\fcs0 \f38\fs14\lang0\langfe2052\kerning1\langfenp2052 \sbasedon10 \slink80 \slocked \ssemihidden \styrsid8278902 Balloon Text Char;}}{\*\listtable{\list\listtemplateid1{\listlevel
\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-432\li432\lin432 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0
\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-576\li576\lin576 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0
\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-720\li720\lin720 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-864\li864\lin864 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 
\fi-1008\li1008\lin1008 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1152\li1152\lin1152 }{\listlevel
\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1296\li1296\lin1296 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0
\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1440\li1440\lin1440 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0
\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1584\li1584\lin1584 }{\listname ;}\listid1}}{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}{\*\revtbl {Unknown;}{Timothy Willis;}}{\*\rsidtbl \rsid147477\rsid279389
\rsid399725\rsid420266\rsid687277\rsid868838\rsid1914731\rsid4929292\rsid5187331\rsid5389289\rsid5601660\rsid6362675\rsid7433352\rsid7825386\rsid8278902\rsid8281048\rsid8851737\rsid9250483\rsid10490904\rsid10579754\rsid11082161\rsid11956592\rsid12457384
\rsid13509385\rsid13711397\rsid15204850\rsid15207921\rsid15608888\rsid15994028}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\title Original file was Jiansen.tex}
{\author Timothy Willis}{\doccomm Created using latex2rtf 2.3.5 r1236 (released Jan 17 2014) on Wed Mar 12 16:46:37 2014}{\operator Timothy Willis}{\creatim\yr2014\mo3\dy17\hr21\min5}{\revtim\yr2014\mo3\dy17\hr21\min34}{\version6}{\edmins28}{\nofpages25}
{\nofwords7507}{\nofchars39536}{\nofcharsws46950}{\vern32773}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12280\paperh15900\margl2680\margr2700\margt2540\margb1760\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\revisions\trackmoves1\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\formshade\horzdoc\dghspace120\dgvspace120
\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale178\rsidroot8278902 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0{\*\ftnsep \ltrpar \pard\plain \ltrpar\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8278902 
\rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 \chftnsep 
\par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8278902 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 \chftnsepc 
\par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8278902 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 \chftnsep 
\par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8278902 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 
{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 \chftnsepc 
\par }}\ltrpar \sectd \ltrsect\sbknone\linex0\sectunlocked1\sectdefaultcl\sftnbj {\footerr \ltrpar \pard\plain \ltrpar\qc \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 
\fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0  PAGE }}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 
\lang1024\langfe1024\noproof\insrsid7433352 \hich\af200\dbch\af0\loch\f0 25}}}\sectd \ltrsect\linex0\endnhere\sectdefaultcl\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid279389 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\pagebb\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 
\rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\fs40\insrsid8278902 \hich\af200\dbch\af0\loch\f0 Chapter 
{\*\bkmkstart BMevolution1}{\*\bkmkend BMevolution1}3}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\par {\listtext\tab}}\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs40\alang1025 \ltrch\fcs0 
\b\fs40\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 TAkka: Design and Implementation
\par }\pard\plain \ltrpar\s31\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 (This chapter is expanded from [TAKKA], Chapter 4]) 
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In the last Chapter, we }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641142\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 have }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641141\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 seen }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641141\insrsid8278902 
\hich\af200\dbch\af0\loch\f0 examined }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 actor programming and supervision in Erlang/OTP and Akka. Erlang/OTP is written in Erlang, a dynamically typed langua
\hich\af200\dbch\af0\loch\f0 
ge, whereas Akka is written in Scala, a statically typed language. A key advantage of static typing is that it detects some type errors at an early stage, i.e., at compile time. Nevertheless, messages sent to Akka actors are dynamically typed. 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 This Chapte\hich\af200\dbch\af0\loch\f0 
r presents the design of the TAkka library, which confirms the key claim of this thesis: actors in supervision trees can be }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 statically}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  typed by parameterizing the actor class with the type of messages it expects to receive. The Chapter outlines how static \hich\af200\dbch\af0\loch\f0 
and dynamic type checking are used to prevent ill-typed messages. Examples of TAkka applications show that type-parameterized actors can form supervision trees in the same way as actors without type parameters. This Chapter concludes with a brief discussi
\hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0 n }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641145\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 about }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641145\insrsid8278902 \hich\af200\dbch\af0\loch\f0 on }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 design alternatives used by other actor libraries.
\par \hich\af200\dbch\af0\loch\f0 The latest TAkka library is built on top of Akka 2.1.4. During the research of this project, TAkka has been built on stable Akka releases since 2.0. For all Akka versions, actors can be paramete\hich\af200\dbch\af0\loch\f0 
rized as expected. Nevertheless, as Akka APIs and the structure of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641146\insrsid8278902 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 Akka configuration file {\*\atrfstart 382842452}change}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641146\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid8278902 {\*\atrfend 382842452}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382842452}{\*\atndate 656641146}\ltrpar 
\pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 
\ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0 this agrees with both preceding noun phrases}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
slightly in different Akka versions, readers who want to use a later Akka version may need to update the APIs or the configuration file according to the\hich\af200\dbch\af0\loch\f0  specification of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641154\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 used }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Akka version}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641154\insrsid8278902\charrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641154\insrsid8278902 \hich\af200\dbch\af0\loch\f0 used}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 .
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMsec_takka_example}1{\*\bkmkend BMsec_takka_example}
  TAkka Example: a String Counter
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 We begin with an illustrative TAkka example in Figure X. The example is ported from the string counter example given in Figure X. The TAkka code is similar to its Akka equiv
\hich\af200\dbch\af0\loch\f0 alen}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641154\insrsid8278902 \hich\af200\dbch\af0\loch\f0 t}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641154\insrsid8278902\delrsid8278902 \hich\af200\dbch\af0\loch\f0 ce}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , with a few differences marked in }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf2\insrsid8278902 \hich\af200\dbch\af0\loch\f0 blue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641154\insrsid8278902\delrsid13509385 \hich\af200\dbch\af0\loch\f0  colour}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 . 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 First, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class in TAkka takes a type parameter which indicates the type of expected messages. In our example, }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  StringCounter}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is an actor which only expects String messages. Consequently, \hich\af200\dbch\af0\loch\f0 
its }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedReceive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  function has a function type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 String => Unit}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. The type is not explicitly declared in code because it can be inferred and checked by the Scala type system. In an Eclipse IDE with Scala plug-in, the following type information is shown on the \hich\af200\dbch\af0\loch\f0 screen when }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641155\insrsid8278902\delrsid13509385 \hich\af200\dbch\af0\loch\f0 mouseover }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedReceive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641155\insrsid13509385 
\hich\af200\dbch\af0\loch\f0  is}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641155\insrsid13509385\charrsid13509385 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641155\insrsid13509385 \hich\af200\dbch\af0\loch\f0 mouseovered}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 : 
\par }\pard \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard \ltrpar\qj \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The type of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 m}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  at line 8, which is }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 String}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , is omitted too because it can be inferred as well.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
Second, the type of messages sending to an actor reference is statically checked. In the TAkk\hich\af200\dbch\af0\loch\f0 a version of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 StringCounterTest}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , the Scala language infers that the type of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 counter}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , declared at line 16, has type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef[String]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 . }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641165\insrsid9250483 \hich\af200\dbch\af0\loch\f0 This}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641165\insrsid8278902\delrsid9250483 \hich\af200\dbch\af0\loch\f0 It}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  means that only String messages can be sent to }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  counter}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . Sending a non-String message (i.e. line 21) results in a\hich\af200\dbch\af0\loch\f0 
 compile error.
\par \hich\af200\dbch\af0\loch\f0 
Third, dynamic type checking is involved at the earliest opportunity when static type checking meets its limitation. For example, when a user looks up an actor reference by its type and path, as at line 23 and 26, TAkka does not statically 
\hich\af200\dbch\af0\loch\f0 
check if there will be an actor of a compatible type at that path when the program is executed. Although the type error at line 26 is not statically detected, an exception is expected to raise as soon as the ill-typed actor reference is claimed at }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641207\insrsid8278902\delrsid10579754 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 run \hich\af200\dbch\af0\loch\f0 
time (line 26), earlier than the time when the actor reference is used (line 29). The terminal output shows that the print statement at line 28 has not been executed when the exception is raised. The result confirms that the exception is raised by code at
\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 line 26.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_string_counter}1{\*\bkmkend BMtakka_string_counter}: TAkka Example: A String Counter
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
Because sending an actor a message of unexpected type is prevented, there is no need to define a handler for unexpected messages in our TAkka example. Eliminating ill-typed messages benefits both u\hich\af200\dbch\af0\loch\f0 
sers and developers of actor-based services. For users, since messages are transmitted asynchronously, it is easier to trace the source of potential errors if they are captured earlier, especially in a distributed environment. For service developers, they
\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 can focus on the logic of the services rather than worrying about incoming messages of unexpected types.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMtakka_actor}2{\*\bkmkend BMtakka_actor}
  Type-parameterized Actor
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A TAkka actor has type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 . It inherits the Akka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Actor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait to minimize }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641208\insrsid8278902\delrsid10579754 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 implementation effort. Users of th
\hich\af200\dbch\af0\loch\f0 e TAkka library, however, do not need to use any Akka Actor APIs. Instead, programmers are encouraged to use the typed interface given in Figure X. Unlike other actor libraries, every TAkka actor class takes a type parameter }
{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  which specifies the type of m\hich\af200\dbch\af0\loch\f0 
essages expected by the actor. The same type parameter is used as the input type of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedReceive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  function. The actor reference pointing to itself, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedSelf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , has type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  ActorRef[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  to which only messages of type }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  can be sent. The actor context for the \hich\af200\dbch\af0\loch\f0 actor, }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedContext}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , has type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 ActorContext[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . On the other hand, fields not directly related to message}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641208\insrsid8278902\delrsid10579754 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  processing have the same type signature as their Akka equivalent.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_actor_api}2{\*\bkmkend BMtakka_actor_api}: TAkka API: TypedActor
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Notice that the type of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedReceive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  is }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Fun\hich\af200\dbch\af0\loch\f2 ction[M, Unit]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, whereas the type of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 receive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  in the Akka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Actor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class is }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
 PartialFunction[Any, Unit]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . As mentioned in Section X, an advantage of using }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Function
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is that the compiler can check the completeness of the domain patterns. In Akka, completeness chec\hich\af200\dbch\af0\loch\f0 
king is not considered because an Akka actor may receive messages of any type. In contrast, a TAkka actor only expects messages of a certain type. Therefore, pattern completeness checking is a helpful feature for TAkka users.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The two immutable fields of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Ty\hich\af200\dbch\af0\loch\f2 pedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 typedContext}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedSelf}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , are automatically initialized when the actor is created. Library users may override the default supervisor strategy in the way explained in Section X. The implementation of the }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  typedReceive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method, on the other hand, \hich\af200\dbch\af0\loch\f0 is always provided by users.

\par \hich\af200\dbch\af0\loch\f0 Notice that }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 takka.actor.TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  inherits }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 akka.actor.Actor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. A critical problem of using inheritance is that dynamically typed Akka APIs, which we are trying to avoid whenever possible, are still available to TAkka users. Unfo\hich\af200\dbch\af0\loch\f0 
rtunately, this limitation cannot be overcome by using delegation because, as we have seen in Akka APIs, a child actor is created by calling the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method from its supervisor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \loch\af0\dbch\af0\hich\f200 \rquote }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 s actor context, which cannot}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641210\insrsid10579754 \hich\af200\dbch\af0\loch\f0  be}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  accessed outside the supervisor. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 is the only TAkka class that is implemented using inheritance. All other TAkka classes and traits are either implemented by delegating tasks to Akka counterparts or rewritten in TAkka. Re-implementing the TAkka Actor library requires a similar amount of 
\hich\af200\dbch\af0\loch\f0 w\hich\af200\dbch\af0\loch\f0 ork }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641211\insrsid8278902\delrsid10579754 \hich\af200\dbch\af0\loch\f0 as }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641211\insrsid10579754 \hich\af200\dbch\af0\loch\f0 to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 implementing the Akka Actor library.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMtakka_actor_ref}3{\*\bkmkend BMtakka_actor_ref}
  Type-parameterized Actor Reference
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The last section explains the type-parameterised Actor class, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  TypedActor[M]}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , whose message handler only considers messages of the expected type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 . Such a design only wo\hich\af200\dbch\af0\loch\f0 
rks in a system which either provides a reasonable handler for undefined messages at the receiver side, or is able to prevent ill-typed messages at the sender side. As mentioned in Section X, undefined messages are handled differently in Erlang and differ
\hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0 
nt Akka versions. Each mechanism has its own rationale. Unfortunately, there is no known single mechanism that meets the requirements of all applications. The Akka development team tends to provide more ways to handle unexpected messages at the receiver s
\hich\af200\dbch\af0\loch\f0 i\hich\af200\dbch\af0\loch\f0 de. In contrast, the TAkka library is aim}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641250\insrsid5187331 \hich\af200\dbch\af0\loch\f0 ed}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641250\insrsid8278902\delrsid5187331 \hich\af200\dbch\af0\loch\f0 ing}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  at preventing ill-typed messages at the sender side. We achieve }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641250\insrsid8278902\delrsid5187331 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641250\insrsid5187331 \hich\af200\dbch\af0\loch\f0 
this }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 goal by adding a type parameter to the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The API of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is given in Figure X. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class takes two parameters\hich\af200\dbch\af0\loch\f0 : one type parameter that indicates the type of expected message and one implicit argument that records the }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Manifest}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  of the type parameter. In most cases, the implicit }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Manifest}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  can be provided by the Scala language automatically.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641254\insrsid8278902\delrsid5187331 \hich\af200\dbch\af0\loch\f0 Like }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641254\insrsid5187331 
\hich\af200\dbch\af0\loch\f0 As }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 in Erlang and Akka\hich\af200\dbch\af0\loch\f0 , users send a message to an actor via the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ! }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method of its actor reference. Sending an actor a message of a different type causes an error at compile time. By using type-parameterized actor references, the receiver does not need to worry about unexpected \hich\af200\dbch\af0\loch\f0 
messages, while senders can be sure that messages will be understood and processed, as long as the message is delivered.
\par \hich\af200\dbch\af0\loch\f0 An actor }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641259\insrsid5187331 \hich\af200\dbch\af0\loch\f0 can }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 usually }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641259\insrsid8278902\delrsid5187331 \hich\af200\dbch\af0\loch\f0 can }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
react to a finite set of different message patterns, whereas our notation of actor reference only takes one ty\hich\af200\dbch\af0\loch\f0 
pe parameter. In a type system that supports untagged union types, no special extension is required. In a type system which supports polymorphism, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  should be contravariant on its type argument }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , denoted as }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef[-M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 in Scala. To understand why }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is contravariant, let}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641259\insrsid5187331 \hich\af200\dbch\af0\loch\f0  u}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641259\insrsid8278902\delrsid5187331 \loch\af0\dbch\af0\hich\f200 \rquote }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 s consider both the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 Get and Put Principle}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  and an illustrative example. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 is contravariant because users only }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 put}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 values to an actor reference but never get values out of it. The illustrative example considered here i\hich\af200\dbch\af0\loch\f0 
s a simple calculator defined in Figure X. The calculator defined in the example can compute the result of two types of operations: multiplication and division. Hence, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Division}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is a subtype of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Operation}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . It is clear that }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef[Operation]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  is a subtype of\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef[Division]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  because if users can send both multiplication requests and division requests to an actor reference, they can send division requests only to that actor reference.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_actor_reference_api}3{\*\bkmkend BMtakka_actor_reference_api}: TAkka API: Actor Reference
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_actor_reference_example}4{\*\bkmkend BMtakka_actor_reference_example}: TAkka Exa\hich\af200\dbch\af0\loch\f0 mple: Typed Actor Reference
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 For ease of use, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  provides a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 publishAs}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method that casts an actor reference to a version that only accepts a subset of supported messages. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 publishAs}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method encapsulates the process of type cast on }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, a contrav\hich\af200\dbch\af0\loch\f0 ariant type. We believe that using the notation of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 publishAs}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method can be more intuitive than thinking about contravariance and subtyping relationship each time, especially when publishing an actor reference as different types in a complex application\hich\af200\dbch\af0\loch\f0 
. In addition, type conversion using }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 publishAs}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 is statically type checked. More importantly, with the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 publishAs}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method, users can give a supertype of an actor reference on demand, without defining new supertypes}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641267\insrsid4929292 ,}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  and modify affected classes in the type hie\hich\af200\dbch\af0\loch\f0 rarchy, some of which may not be accessible by application developers.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMtakka_actor_porps}4{\*\bkmkend BMtakka_actor_porps}
  Type Parameterized Props
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An instance of type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Props[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  is used when creating an actor of type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  TypedActor[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. A Prop of type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Prop[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  can be created by one of the two factory methods
\hich\af200\dbch\af0\loch\f0  provided by the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Props}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  object.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_props}5{\*\bkmkend BMtakka_props}: TAkka API: Props
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In Figure C, a Props for creating an instance of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  StringCounter}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is created by the following code 
\par }\pard \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard \ltrpar\qj \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In the above code, Scala checks that }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 StringCounter}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is a subtype of
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor[String\hich\af200\dbch\af0\loch\f2 ]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, and provides a value for the implicit parameter, which has type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Manifest[StringCounter]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 .
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The TAkka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Props}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class is contravariant on its type parameter because users can create an actor by providing a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Props}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  instance that is able to create actors that can \hich\af200\dbch\af0\loch\f0 handle more types of messages.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMtakka_actor_context}5{\*\bkmkend BMtakka_actor_context}
  Type Parameterized Actor Context
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An actor context describes the contextual information of an actor. Because each actor is an independent computational primitive, an actor context is private to its corresponding actor. By
\hich\af200\dbch\af0\loch\f0  using APIs in Figure X, an actor can 
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0 1.\tab create a child actor supervised by itself, }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0 2.\tab fetch some of its states, }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.\tab retrieve an actor reference corresponding to a given actor path and type using the }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  method, }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0 4.\tab set a timeout denoting the time w\hich\af200\dbch\af0\loch\f0 ithin which a new message must be received using the }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 
\fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 setReceiveTimeout}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  method, and }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0 5.\tab update its behaviours using the }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  method. }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Compared with corresponding Akka APIs, TAkka methods take an additional type parameter whose meaning will be explained sh\hich\af200\dbch\af0\loch\f0 ortly.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_api_actor_context}6{\*\bkmkend BMtakka_api_actor_context}: TAkka API: Actor Context
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An actor creates a child actor using the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  method or the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  remoteActorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method. If no user-specified name is provided for the child, a system-generated one will be used. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method returns a \hich\af200\dbch\af0\loch\f0 TAkka actor reference which internally maintains a type descriptor and an Akka actor reference. {\*\atrfstart 382849786}Somehow}{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 
\cs74\fs16\insrsid15207921 {\*\atrfend 382849786}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382849786}{\*\atndate 656641281}\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 
\rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 
\insrsid279389 \hich\af200\dbch\af0\loch\f0 I don't think this is the right word here - it implies we don't know\hich\af200\dbch\af0\loch\f0  the cause?}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, the Akka actor reference returned by the Akka system cannot be used remotely because its actor path does not include an IP address and a port number. \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 remoteActorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method is implemented in TAkka as a complement to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 remoteActorOf}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  returns an actor reference that can be used remotely if the actor system enables remote communication, otherwise it raises a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 NotRemoteSystemException}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . Calling }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 re
\hich\af200\dbch\af0\loch\f2 moteActorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  takes longer }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641282\insrsid8278902\delrsid15207921 
\hich\af200\dbch\af0\loch\f0 time }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 than calling }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  because the IP address and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641282\insrsid8278902\delrsid15207921 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 port number need to be fetched from the system configuration. The way to enabl}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641282\insrsid15207921 \hich\af200\dbch\af0\loch\f0 e
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641282\insrsid8278902\delrsid15207921 \hich\af200\dbch\af0\loch\f0 ing}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 distributed programming will be explained in Section X.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The contextual information of an ac\hich\af200\dbch\af0\loch\f0 tor includes the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Props}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 used to create that actor, the typed actor reference pointing to that actor, and the actor system where the actor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641282\insrsid8278902\delrsid15207921 \hich\af200\dbch\af0\loch\f0  is}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  resid}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641282\insrsid15207921 \hich\af200\dbch\af0\loch\f0 es}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641282\insrsid8278902\delrsid15207921 \hich\af200\dbch\af0\loch\f0 ing in}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . TAkka removes APIs that enquire }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641283\insrsid8278902\delrsid15207921 \hich\af200\dbch\af0\loch\f0 on }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 the actor reference of an actor}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \loch\af0\dbch\af0\hich\f200 \rquote }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 s parent and children for two reas\hich\af200\dbch\af0\loch\f0 
ons. Firstly, the types of the parent and children of an actor are unknown to the library developer as they vary from one actor to another. Secondly, actor references to parent and children of an actor can be obtained using the }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method if their pat\hich\af200\dbch\af0\loch\f0 
hs and types are known by the user. A TAkka actor context does not record the value of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 sender}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  because its type changes for each message. We recommend the Erlang-style message pattern, in which the actor reference to the message sender is part of the me\hich\af200\dbch\af0\loch\f0 
ssage if the sender expects a reply message.
\par \hich\af200\dbch\af0\loch\f0 The two }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 methods are used for fetching an actor reference of the expected type located at an actor path. The task of type checking and reference fetching is delegated to the actor system (Section X), whi\hich\af200\dbch\af0\loch\f0 ch implements the same APIs.

\par \hich\af200\dbch\af0\loch\f0 The method signature of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 setReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641284\insrsid8278902\delrsid15608888 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\prauth1\prdate656641284\rin0\lin0\itap0\pararsid15608888 {\*\oldpprops \pard \ltrpar\qj \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15608888 }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 receiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method are the same as the Akka version. The }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 setReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method sets a timeout within which a new message is expected to be received. The }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 receiv\hich\af200\dbch\af0\loch\f2 eTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method returns the set timeout. In Akka, if no message is received within the specified timeout, a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 message}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is sent to the actor itself. In Akka, the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message and other messages are handled by the }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 receive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method. In TAk\hich\af200\dbch\af0\loch\f0 ka, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message is handled by the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 systemMessageHandler}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method separately. Section X explains the TAkka design in depth.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Finally, TAkka defines the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method with a new signature so that behaviour upgrade is backward compatible. To guaran
\hich\af200\dbch\af0\loch\f0 tee backward compatibility, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 unbecome}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method is removed. The next section explains behaviour upgrade in TAkka.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMhot_swapping}6{\*\bkmkend BMhot_swapping}
  Backward Compatible Behaviour Upgrade
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method enables behaviour upgrade of an actor. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method in TAkka is different fr\hich\af200\dbch\af0\loch\f0 om behaviour upgrades in Akka in two aspects. Firstly, as {\*\atrfstart 382850097}the handler for system messages are }{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid15608888 
{\*\atrfend 382850097}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382850097}{\*\atndate 656641287}\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 
\ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0 
singular or plural? Either should be fine. But may need to agree with the second use of 'handler'?}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
separated from the handler for other messages, TAkka users may update the system message handler as well. Secondly, behaviour upgrade in TAkka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 must}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  be backward c\hich\af200\dbch\af0\loch\f0 ompatible and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 cannot}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  be rolled back. In other words, an actor must evolve to a version that is at least capable of handling all messages accepted by the previous version. The above decision }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641288\insrsid147477 \hich\af200\dbch\af0\loch\f0 wa}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641288\insrsid8278902\delrsid147477 \hich\af200\dbch\af0\loch\f0 i}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 s made so that a service published to users will not be unavail\hich\af200\dbch\af0\loch\f0 able later. 
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_become}7{\*\bkmkend BMtakka_become}: Behavio}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641288\insrsid147477 
\hich\af200\dbch\af0\loch\f0 u}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 r Upgrade in TAkka
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method is implemented as shown in Figure X. The design of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method involves both static type checking and dynamic type checking. The static type parameter }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  should be interprete\hich\af200\dbch\af0\loch\f0 d as the least general type of messages expected by an actor of type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
TypedActor[M]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , whose initial message handler has a function type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 M=>Unit}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . When a user decides to upgrade the message handler of an actor, it is important to make sure that the new message\hich\af200\dbch\af0\loch\f0 
 handler is aware of all types of messages that may be sent to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641295\insrsid147477 \hich\af200\dbch\af0\loch\f0 an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 actor before the upgrade. Backward compatible behaviour upgrade requires that the input type of a new message handler should be a supertype of the input type of the old message handler. Unfo\hich\af200\dbch\af0\loch\f0 
rtunately, the concrete type of the new message handler will only be known when the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method is invoked. When a series of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 invocations are made at }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641295\insrsid8278902\delrsid147477 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
run time, the order of those invocations may be non-deterministic. Therefore, it is not possib\hich\af200\dbch\af0\loch\f0 
le to guarantee backward compatibility by using static type checking only. As a result, dynamic type checking is required. To do so, each }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  TypedContext}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  instance record}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641295\insrsid147477 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  the ma}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641295\insrsid8278902\delrsid147477 \hich\af200\dbch\af0\loch\f0 i}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
nifest of the input type of the current message handler. The recorded manifest i\hich\af200\dbch\af0\loch\f0 s used to check if the input type of the new message handler is a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 
\hich\af200\dbch\af0\loch\f0 supertype}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 of the input type of the current message handler. If so, both the manifest and the message handler are updated. Although static type checking meets its limitation, it prevents some\hich\af200\dbch\af0\loch\f0  invalid }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 become}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  invocations at compile time.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMfig_takka_swap}8{\*\bkmkend BMfig_takka_swap}: TAkka Example: Backward Compatible Behaviour Upgrade
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The code in Figure X demonstrates how to upgrade message handler}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641302\insrsid7825386 
\hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  in TAkka. The code is similar to the Akka example in Figure X. The calcul\hich\af200\dbch\af0\loch\f0 ator server begins with a basic version}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641302\insrsid8278902\delrsid7825386 \hich\af200\dbch\af0\loch\f0 . The basic version}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641302\insrsid7825386 
\hich\af200\dbch\af0\loch\f0 , which}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  can only compute multiplication but leaves the developer an opportunity to upgrade it later. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 CalculatorUpgrade}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  test simulates a simple scenario. After using the basic calculator server f
\hich\af200\dbch\af0\loch\f0 or a while, the service developer implements an advanced message handler, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  advancedCalculator}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , which supports both multiplication and division. The developer updates the server by sending an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Upgrade}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message that contains the new message handler. When the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641304\insrsid8278902\delrsid7825386 
\hich\af200\dbch\af0\loch\f0 u\hich\af200\dbch\af0\loch\f0 pgrading }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641304\insrsid7825386 \hich\af200\dbch\af0\loch\f0 upgrade }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 has been completed, users can send }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Division}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 messages to the server.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
There are two differences between the TAkka version (Figure X) and the Akka version (Figure X). First, two new types, namely }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Operation}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 BasicOperation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, are introduced. \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  BasicOperation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 trait is defined to be used as the type parameter of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  CalculatorServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 class. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Operation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait is not required for the basic calculator. The }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Operation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait is provided so that the developer }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641304\insrsid8278902\delrsid7825386 \hich\af200\dbch\af0\loch\f0 could }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641304\insrsid7825386 \hich\af200\dbch\af0\loch\f0 can }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 define new types of operatio\hich\af200\dbch\af0\loch\f0 n in addition to those basic ones. Second, there is no }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Downgrade}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message in the TAkka version. A user who has an actor reference of type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 ActorRef[Operation]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641304\insrsid7825386 \hich\af200\dbch\af0\loch\f0 must }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 always ensure that a division request can be understood by the server.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMnameserver}7{\*\bkmkend BMnameserver}  Typed Name Server

\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
In distributed systems, a name server maps each registered name, usually a unique string, to a dynamically typed value, and provides a function to look up a value for a given name. A name can be encoded as a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Symbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  in Scala so that names which represent th\hich\af200\dbch\af0\loch\f0 
e same string have the same value. As a value retrieved from a name server is }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 dynamically typed}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , it needs to be checked against and be cast to an expected type at the client side before using it.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 To overcome the limitations of the untyped name server, we d
\hich\af200\dbch\af0\loch\f0 esign and implement a typed name server which maps each registered typed name to a value of the corresponding type, and allows}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641307\insrsid8278902\delrsid868838 \hich\af200\dbch\af0\loch\f0  to}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  look up }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641307\insrsid868838 \hich\af200\dbch\af0\loch\f0 of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
a value by giving a typed name. Our typed name server can be straightforwardly ported to other platforms that suppo\hich\af200\dbch\af0\loch\f0 rt type reflection.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMfig_takka_nameserver}9{\*\bkmkend BMfig_takka_nameserver}: Typed Name Server
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.7.1  Typed Name and Typed Value
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A typed name, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , is a name shipped with a type descriptor. A typed value, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TValue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , is a value shipped with a type descriptor, which describes a supertype of the\hich\af200\dbch\af0\loch\f0  most precise type of that value. In Scala, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TValue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  can be simply defined as in Figure X.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In the Scala implementation, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is declared as a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 case class}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  so that it can be used as a data constructor and for pattern matching. In addition, the ty\hich\af200\dbch\af0\loch\f0 pe descriptor, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 t}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , is constructed automatically and is private to the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 takka}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  package so that only the library developer can access it as a field of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TValue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  is declared as a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 case class}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 for the same reason. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 hashCode}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  does not consi\hich\af200\dbch\af0\loch\f0 der the value of its type descriptor for efficiency considerations.

\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.7.2  Operations
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 With the notion of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , a typed name server provides the following three operations: 
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
set[T:Manifest](name:TSymbol[T], value:T):Boolean}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 set}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 operation registers \hich\af200\dbch\af0\loch\f0 a typed name with a value of corresponding type and returns true if the symbolic representation of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 name}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  has }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0  not}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 been registered; otherwise the typed name server discards the request and returns false.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
unset[T](name:TSymbol[T]):Boolean}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 unset}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  operatio
\hich\af200\dbch\af0\loch\f0 n removes the entry }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 name}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 and returns true if (i) its symbolic representation is registered and (ii) the type }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 T}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 is a supertype of the registered type; otherwise the operation returns false.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
get[T](name:TSymbol[T]):Option[T]}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 get}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 operation returns Some(\hich\af200\dbch\af0\loch\f0 v:}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 T}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ), where }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 v}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is the value associated with }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 
\hich\af200\dbch\af0\loch\f0 name}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , if (i) }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 name}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  is a registered name and (ii) }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 T}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 is a supertype of the registered type; otherwise the operation returns None. 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
The TAkka library implements the typed name server using the code given in Figure X. \hich\af200\dbch\af0\loch\f0 
The typed name server internally saves and fetches data by using a standard hashmap data structure. The APIs are designed with the following considerations}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641308\insrsid868838 
\hich\af200\dbch\af0\loch\f0 :}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641308\insrsid8278902\delrsid868838 .}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Firstly, when an operation fails, the name server returns }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 false}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  or }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  None}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  rather than raising an e\hich\af200\dbch\af0\loch\f0 
xception. The decision is made so that the name server is always available. Keeping a name server alive is important especially if the name server permits distributed enquiries, in which case the remote caller would like to have feedback. Although it seem
\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0 
 that the current name server is only available to applications running in the same JVM, as we will see in Section X, distributed enquiries can be easily supported via another application that supports distributed communication, for example, by using a TA
\hich\af200\dbch\af0\loch\f0 k\hich\af200\dbch\af0\loch\f0 ka actor.
\par \hich\af200\dbch\af0\loch\f0 Secondly, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 unset}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method and the }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 get}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method succeed as long as the associated type of the input name is a supertype of the associated type of the registered name. In other words, a user must know how the value is registered. For the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 get}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method,\hich\af200\dbch\af0\loch\f0 
 the returned value shall be used as a supertype of the registered type, which may have }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641310\insrsid8278902\delrsid8281048 \hich\af200\dbch\af0\loch\f0 less }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641310\insrsid8281048 \hich\af200\dbch\af0\loch\f0 fewer }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
methods. To permit polymorphism while keeping the efficiency of using hashmap, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 hashCode}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 does not take its type manifest into account. \hich\af200\dbch\af0\loch\f0 Equivalence comparison on }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  instances, however, considers the type. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 hashCode}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 ignores its type description so that it has an additional benefit. As typed symbols that have the same symbolic representation have the same hash value\hich\af200\dbch\af0\loch\f0 , we prevent the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641310\insrsid8278902\delrsid8281048 \hich\af200\dbch\af0\loch\f0 case }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641310\insrsid8281048 \hich\af200\dbch\af0\loch\f0 situation }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 where users accidentally register two typed names with the same symbolic representation but }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641311\insrsid8278902\delrsid8281048 \hich\af200\dbch\af0\loch\f0 have }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
different types, in which case if one type is a supertype of the other, the return value of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  get}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  may be non-deterministic. In o\hich\af200\dbch\af0\loch\f0 ur design, only names that have not been registered can be added to the name server. Therefore, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 set}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method does not need to check the type information as in the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 unset}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 get}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method. Because the type information in }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TSymbol}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  is ignored in the \hich\af200\dbch\af0\loch\f0 hashmap, it is recorded in the notion of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TValue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , which does not appear in the APIs for library users. 
\par \hich\af200\dbch\af0\loch\f0 Lastly, the implementations of the three operations are thread safe. They are }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 synchronized}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  to prevent thread interference and memory consistency errors. \hich\af200\dbch\af0\loch\f0 When one thread is executing one of the methods of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 NameServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , all other threads that invoke its methods are suspended. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 nameMap}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is a private field to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 NameServer}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  so that other objects cannot directly access it. Finally, the three simple operations are e\hich\af200\dbch\af0\loch\f0 
xecuted without interactions with other objects. Therefore, there is no liveness issue }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641312\insrsid8278902\delrsid11956592 \hich\af200\dbch\af0\loch\f0 of }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641312\insrsid11956592 \hich\af200\dbch\af0\loch\f0 for }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 the implementation.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.7.3  Dynamic Type Comparison
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In general, dynamic type checking can be carried out in two ways. The first method is to check whether the most\hich\af200\dbch\af0\loch\f0 
 precise type of a value conforms to the structure of a data type. Examples of this method include dynamically typed languages and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 instanceOf}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method in Java and other languages. The second method is to compare two type descriptors at run time. The impl\hich\af200\dbch\af0\loch\f0 
ementation of our typed name server uses the second method because it detects type errors which may otherwise be left out in the first method. Our implementation requires the runtime type reification feature provided by Scala. In a system that does not su
\hich\af200\dbch\af0\loch\f0 p\hich\af200\dbch\af0\loch\f0 port type reification, implementing typed name servers is more difficult.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMsec_takka_look_up_actor_reference}8
{\*\bkmkend BMsec_takka_look_up_actor_reference}  Look up Typed Actor References via Actor System
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641313\insrsid11956592 \hich\af200\dbch\af0\loch\f0 In the s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641313\insrsid8278902\delrsid11956592 \hich\af200\dbch\af0\loch\f0 S}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ame }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641313\insrsid11956592 \hich\af200\dbch\af0\loch\f0 way }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 as in Akka, a TAkka actor system organises related actors in a tree structure and provides services such as thre\hich\af200\dbch\af0\loch\f0 ad scheduling, network connection, and logging. The 
{\*\atrfstart 382851777}APIs of the TAkka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorSystem}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class is}{\rtlch\fcs1 
\af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid15994028 {\*\atrfend 382851777}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382851777}{\*\atndate 656641314}\ltrpar \pard\plain \ltrpar
\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 
\cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0 singular or plural?}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 given in Figure X. Because the functionality of a TAkka actor system is almost the same as an Akka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorSystem}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 , the TAkka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorSystem}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is implemented by managing an 
\hich\af200\dbch\af0\loch\f0 Akka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorSystem}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 as its private field, to which dynamically typed tasks are delegated. In addition to using the Akka library functions, a TAkka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorSystem}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  employs both static and dynamic type checking to detect type errors. This section explains how the t\hich\af200\dbch\af0\loch\f0 yped name server, described in the last section, is used when creat}
{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641314\insrsid15994028 \hich\af200\dbch\af0\loch\f0 ing}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641314\insrsid8278902\delrsid15994028 
\hich\af200\dbch\af0\loch\f0 e}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and fetch}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641314\insrsid15994028 \hich\af200\dbch\af0\loch\f0 ing}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  type parameterized actor references.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
In addition to delegating some tasks to an Akka actor system, a TAkka actor system uses the typed name server in the same JVM to save \hich\af200\dbch\af0\loch\f0 typed actor references created by that actor system. Each TAkka actor system initializes an 
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorTypeChecker}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  instance that is responsible }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641315\insrsid15204850 \hich\af200\dbch\af0\loch\f0 for}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641315\insrsid8278902\delrsid15204850 \hich\af200\dbch\af0\loch\f0 to}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  enquir}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641315\insrsid8278902\delrsid15204850 \hich\af200\dbch\af0\loch\f0 e on}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641315\insrsid15204850 \hich\af200\dbch\af0\loch\f0 ing}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 whether a typed actor reference is registered at the typed name server located at the JVM it runs.\hich\af200\dbch\af0\loch\f0  In this section, Figure X presents the code of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  function which creates an actor and registers its actor reference to the typed name server. Figure X presents the code of the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  function which fetches typed actor references.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figur\hich\af200\dbch\af0\loch\f0 e {\*\bkmkstart BMtakka_api_actor_system}10{\*\bkmkend BMtakka_api_actor_system}: TAkka API: Actor System
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_actorOf}11{\*\bkmkend BMtakka_actorOf}: Actor System: actorOf
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_actorFor}12{\*\bkmkend BMtakka_actorFor}: Actor System: actorFor
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  method and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 remoteActorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 method create an actor that is supervised by a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 user}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 actor created by the system. The task of creating\hich\af200\dbch\af0\loch\f0 
 an actor is delegated to an Akka actor system, which is a private field of a TAkka actor system. The additional work done by the TAkka actor system is to register the typed actor path and the typed actor reference into the typed name server running in th
\hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0  same JVM (line 17 and line 33 in Figure X ). Because an actor reference returned by the Akka }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorOf}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method cannot be used remotely as it does not contain an IP address and a port number, the TAkka library defines a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 remoteActorOf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method which returns a ty\hich\af200\dbch\af0\loch\f0 
ped actor reference that contains information required for using it remotely. If remote communication is not enabled by the actor system, a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 NotRemoteSystemException}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  will arise.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method returns a typed actor reference if there is such}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641329\insrsid399725 \hich\af200\dbch\af0\loch\f0 , }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641330\insrsid399725 \hich\af200\dbch\af0\loch\f0 with}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641329\insrsid8278902\delrsid399725 \hich\af200\dbch\af0\loch\f0  one \hich\af200\dbch\af0\loch\f0 tha}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641330\insrsid8278902\delrsid399725 
\hich\af200\dbch\af0\loch\f0 t has}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  an expected type}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641330\insrsid8278902\delrsid399725 
\hich\af200\dbch\af0\loch\f0 d}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641330\insrsid399725 ,}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641330\insrsid8278902\delrsid399725 \hich\af200\dbch\af0\loch\f0 
 and is}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 located at a given path. When looking for a typed actor reference, the actor system first checks if the input actor path contains an IP address and a port number. If so, it sends a request to the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorTypeServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  actor in \hich\af200\dbch\af0\loch\f0 the remote actor system; otherwise it sends a request to the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorTypeServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  actor in the local machine. When an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  ActorTypeServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 actor receives a request that asks if there is an actor reference of the expected type at a given path, it checks registered n\hich\af200\dbch\af0\loch\f0 ames at the typed name server in its JVM. 
\par {\*\atrfstart 382852876}\hich\af200\dbch\af0\loch\f0 Although }{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid11082161 {\*\atrfend 382852876}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382852876}{\*\atndate 656641332}
\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 
\ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0 This requires a main clause; do you mean 'However'?}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
a typed name server defined in the current TAkka implementation can only be directly called by applications running on the same JVM. As the implementation of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorFor
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  shows, it can indirectly receive rem\hich\af200\dbch\af0\loch\f0 
ote requests via applications that support distributed communication, for example, TAkka actors. The design of a consistent global shared typed name server is left as a future extension.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMsupervision}9{\*\bkmkend BMsupervision}
  Supervisor Strategies
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The TAkka library uses the Akka supervisor\hich\af200\dbch\af0\loch\f0  strategies explained in Section X: }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 OneForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 AllForOne}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . If a supervisor adopts the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 OneForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  strategy, it restarts its child when it fails. The failure of an actor will not affect its siblings. If a supervisor adopts the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
AllForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  supervisor strategy,\hich\af200\dbch\af0\loch\f0  all children will be restarted when any of them fails. The third OTP supervisor strategy, }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  RestForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, restarts children in a user-specified order, and hence is not supported by Akka as it does not specify an order of initialization for children. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Rest
\hich\af200\dbch\af0\loch\f2 ForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 supervisor strategy can be simulated by grouping related children and defines special messages to trigger actor terminations. The TAkka library does not implement the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 RestForOne}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  strategy because it is not needed for the applications we consider.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Fig\hich\af200\dbch\af0\loch\f0 ure X gives APIs of supervisor strategies in TAkka. 
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641334\insrsid8278902\delrsid11082161 \hich\af200\dbch\af0\loch\f0 Actually}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641334\insrsid11082161 
\hich\af200\dbch\af0\loch\f0 In fact}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
, it is the same as the Akka version given in Figure X. TAkka reuses the Akka APIs because none of the supervisor strategies requires type-parameters and TAkka separates the message handler\hich\af200\dbch\af0\loch\f0 
 for system messages and the message handler for other messages.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_supervisor_strategy}13{\*\bkmkend BMtakka_supervisor_strategy}: TAkka API: Supervisor Strategies
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakka_safe_calculator}14{\*\bkmkend BMtakka_safe_calculator}: TAkka Example: Supervised Calculator
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A TAkka Safe Calculator example is given in Figure X as a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641335\insrsid8278902\delrsid11082161 
{\*\atrfstart 382853019}\hich\af200\dbch\af0\loch\f0 reminiscence }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641335\insrsid11082161 {\*\atrfend 382853019}\hich\af200\dbch\af0\loch\f0 reminder }{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 
\cs74\fs16\insrsid11082161 {\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382853019}{\*\atndate 656641335}\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 
\af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 
\hich\af200\dbch\af0\loch\f0 I don't think this is the right word? A reminder, I think.}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
of the Akka Safe Calculator in Figure X. Both examples define a simple calculator which supports multiplication and division. The simple calculator does not consider the problematic case of dividing a number by 0, in which case an }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ArithmeticException}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  will \hich\af200\dbch\af0\loch\f0 
raise. A fault tolerant calculator, safe calculator, is defined as the supervisor of the simple calculator. The safe calculator delegates calculation tasks to the simple calculator and restarts }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641336\insrsid8278902\delrsid11082161 \hich\af200\dbch\af0\loch\f0 the simple calculator}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641336\insrsid11082161 \hich\af200\dbch\af0\loch\f0 it}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  when an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ArithmeticException}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  raises. Th\hich\af200\dbch\af0\loch\f0 
e supervisor strategy of the safe calculator also specifies the maximum failures its child may have within a time range. If the child fails more frequently than the allowed frequency, the safe calculator will be stopped, and its failure will be reported t
\hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0  its supervisor, the system guardian actor in this example. The terminal output shows that the simple calculator is restarted before the next message is delivered.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The TAkka implementation is modified from the Akka version with changes marked in }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf2\insrsid8278902 \hich\af200\dbch\af0\loch\f0 blue}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 . Firs\hich\af200\dbch\af0\loch\f0 t, an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Operation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait is introduced as the supertype of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Multiplication}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Division}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  message. Second, actor classes are parameterized by the type of messages they expected. Third, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
calculator}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  actor reference in TAkka can publish itself as\hich\af200\dbch\af0\loch\f0  an actor reference, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 multiplicator}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , which only accepts multiplication requests}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641337\insrsid8278902\delrsid10490904 \hich\af200\dbch\af0\loch\f0  only}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. The supervisor strategy used in the TAkka implementation is exactly the same as the one in the Akka implementation.
\par 
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\pagebb\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMsystemmessage}10{\*\bkmkend BMsystemmessage}
  Handling System Messages
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Actors communicate with\hich\af200\dbch\af0\loch\f0 
 each other by sending messages. To organize actors, a special category of messages should be handled by all actors. In Akka, those messages are subclasses of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
PossiblyHarmful}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait. The TAkka library retains some of them as subclasses of the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
SystemMess\hich\af200\dbch\af0\loch\f2 age}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trait.
\par }\pard\plain \ltrpar\s48\qc \li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par \ltrrow}\trowd \irow0\irowband0\ltrrow\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil 
\cellx2747\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb
\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 
\fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Message\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 TAkka 2.0\cell \hich\af200\dbch\af0\loch\f0 TAkka 2.1\cell \hich\af200\dbch\af0\loch\f0 Akka 2.0\cell 
\hich\af200\dbch\af0\loch\f0 Akka 2.1\cell }\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow0\irowband0\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Kill\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow1\irowband1\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  PoisonPill\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow2\irowband2\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  ReceiveTimeout\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow3\irowband3\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  ChildTerminated\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow4\irowband4\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Restart\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow5\irowband5\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Terminated\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 Y\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow6\irowband6\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Create\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow7\irowband7\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Failed\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow8\irowband8\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Link\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow9\irowband9\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Unlink\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow10\irowband10\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  S\hich\af200\dbch\af0\loch\f0 
uspend\cell }\pard \ltrpar\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell 
\hich\af200\dbch\af0\loch\f0 N\cell }\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow11\irowband11\ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row \ltrrow}\pard \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  Resume\cell }\pard \ltrpar
\qc \li0\ri0\widctlpar\intbl\wrapdefault\faauto\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 N\cell \hich\af200\dbch\af0\loch\f0 Y\cell \hich\af200\dbch\af0\loch\f0 N\cell 
}\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \trowd \irow12\irowband12\lastrow \ltrrow
\ts11\trleft0\trftsWidth1\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2747\clshdrawnil \cellx2747\clvertalt\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1094\clshdrawnil \cellx3841\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth1092\clshdrawnil \cellx4933
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth982\clshdrawnil \cellx5915\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth985\clshdrawnil \cellx6900\row }\pard\plain \ltrpar\s48\qc \li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Table {\*\bkmkstart BMsystem_messages}1{\*\bkmkend BMsystem_messages}: System Messages
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Table X lists system messages used in different versions of Akka and TAkka. The purpose of those messages are examples as the followings.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Kill}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An actor that receives this message will send an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Ac\hich\af200\dbch\af0\loch\f2 torKilledException}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  to its supervisor.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 PoisonPill}{
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An actor that receives this message will be permanently terminated. The supervisor cannot restart the killed actor.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent from an actor to itself when it has not received a messag\hich\af200\dbch\af0\loch\f0 e after a timeout.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 
ChildTerminated(child: ActorRef[M])}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent from a child actor to its supervisor before it terminates.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Restart}{
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent from a supervisor to its terminated child asking the child to restart.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Terminated}{
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 When an actor mo\hich\af200\dbch\af0\loch\f0 
nitors the life cycle of another actor using Akka Death Watch [Typesafe Inc. (b), 2012, Section 3.1], the watcher will receive a Terminated(watched) message when the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 watched
}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  actor is terminated.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Create}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent to the created actor itself.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Failed}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 An actor send}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641338\insrsid10490904 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  itself a }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Failed(cause: Throwable)}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 message when an error of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 cause}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641339\insrsid8278902\delrsid10490904 \hich\af200\dbch\af0\loch\f0 occurred }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641339\insrsid10490904 \hich\af200\dbch\af0\loch\f0 occurrs }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 when it is processing messages.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Link}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent to linked actors when Akka Death Watch [Typesafe Inc. (b), 2012, Section 3.1] is used.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Unlink}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  A messag\hich\af200\dbch\af0\loch\f0 e sent to linked actors when Akka Death Watch [Typesafe Inc. (b), 2012, Section 3.1] is disabled. }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 
\insrsid8278902 
\par }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Suspend}{
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \li600\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 A message sent by the system to an actor asking it }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641339\insrsid10490904 \hich\af200\dbch\af0\loch\f0 to }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 suspend the process of processing remaining messages in its mailbox.
\par }\pard\plain \ltrpar\s26\ql \fi-300\li600\ri0\sa120\sl100\slmult0\widctlpar\tx566\wrapdefault\faauto\rin0\lin600\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \bullet }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \tab }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Resume}{\rtlch\fcs1 
\af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  A message sent \hich\af200\dbch\af0\loch\f0 by the system to an actor to dissolve the effects of the }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2  Suspend}{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  message so that the actor will resume the process of processing messages in its mailbox.}{\rtlch\fcs1 \af31507\afs24 
\ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sb100\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  message is retained because it is used in many applications considered in this the\hich\af200\dbch\af0\loch\f0 sis. The TAkka library retains }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Kill}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 PoisonKill}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  because they are used when implementing the Chaos Monkey library and the Supervision View library explained in Section X. The TAkka library does not retain }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Create}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 {\*\atrfstart 382853408}.}{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid10490904 {\*\atrfend 382853408}{\*\atnid TW}{\*\atnauthor 
Timothy Willis}\chatn {\*\annotation{\*\atnref 382853408}{\*\atndate 656641345}\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 
\fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid279389 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid279389 \hich\af200\dbch\af0\loch\f0 I think t
\hich\af200\dbch\af0\loch\f0 his should be a comma?}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Suspend}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Resume}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 because they are not\hich\af200\dbch\af0\loch\f0  used in applications considered in this thesis. Those messages can be included in future versions of TAkka if required. The TAkka library does not retain }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  Terminated}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Link}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 , and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Unlink}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 because, as will be explained in Section X, life-cycle monitor relation\hich\af200\dbch\af0\loch\f0 ship outside the supervision tree is considered as a redundant design.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
The next question is whether a system message should be handled by the library or by application developers. In Erlang and early versions of Akka, all system messages can be explicitly \hich\af200\dbch\af0\loch\f0 handled by developers in the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 receive}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 block. In recent Akka versions, some system messages become private to library developers and some can be still handled by application developers.
\par \hich\af200\dbch\af0\loch\f0 As there are only two kinds of supervisor strategies to consider, both o\hich\af200\dbch\af0\loch\f0 
f which have clearly defined operational behaviours, all messages related to the liveness of actors are handled in the TAkka library. Application developers may indirectly affect the system message handler via specifying the supervisor strategies. In cont
\hich\af200\dbch\af0\loch\f0 r\hich\af200\dbch\af0\loch\f0 ast, messages related to the behaviour of an actor, e.g. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , are better handled by application developers. In TAkka, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ReceiveTimeout}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  is the only system message that can be explicitly handled by users. Nevertheless, we keep the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 SystemMessage}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  trai\hich\af200\dbch\af0\loch\f0 t in the library so that new system messages can be included in the future when required.
\par \hich\af200\dbch\af0\loch\f0 A key design decision in TAkka is to separate handlers for the system messages and user-defined messages. The above decision has two benefits. Firstly, the type param\hich\af200\dbch\af0\loch\f0 
eter of actor-related classes only need}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641347\insrsid6362675 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 to denote the type of user defined messages rather than the untagged union of user defined messages and the system messages. Therefore, the TAkka design applies to systems that do not support untagged union type. Se\hich\af200\dbch\af0\loch\f0 
condly, since system messages can be handled by the default handler, which applies to most applications, users can focus on the logic of handling user defined messages.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMsec_distributed_calculator}11
{\*\bkmkend BMsec_distributed_calculator}  Case Study: A Distributed Calculator
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In previous sections, we have seen that an a\hich\af200\dbch\af0\loch\f0 
ctor can be parameterized by the type of messages it expects. Adding type parameters to actors does not affect the construction of supervision trees because system messages are separated from other messages. Because the TAkka library delegates the tasks o
\hich\af200\dbch\af0\loch\f0 f\hich\af200\dbch\af0\loch\f0  actor creation and message sending to the underlying Akka system, distributed communication can be done in TAkka in the same way as in Akka. 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
The example used in this section is modified from the example in [Typesafe Inc. (b), 2012, Section 5.11]. In this\hich\af200\dbch\af0\loch\f0 
 example, two calculators will be created as actors, one basic calculator that can compute addition and subtraction, one advanced calculator that can compute multiplication and division. The basic calculator will be created locally as }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641350\insrsid279389 \hich\af200\dbch\af0\loch\f0 in }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 previous examples.\hich\af200\dbch\af0\loch\f0 
 The advanced calculator will be created at a remote machine by updating the actor system configuration. Actor references for local and remote actors are retrieved in the same way.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.11.1  Actor System Configuration for Distribution
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Application developers \hich\af200\dbch\af0\loch\f0 can override the default configuration of an Akka actor system by providing an alternative }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Config}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  object or load the configuration from an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 application.conf}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  file in the application deployment folder}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641350\insrsid8278902\delrsid279389 .}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  [Typesafe Inc. (b), 2012]}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641350\insrsid279389 .}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  The configuration of a TAkka a\hich\af200\dbch\af0\loch\f0 ctor system is modified by changing the }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Config}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  object which is used by the underlying Akka actor system. The details of }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641350\insrsid279389 \hich\af200\dbch\af0\loch\f0 A}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641350\insrsid8278902\delrsid279389 \hich\af200\dbch\af0\loch\f0 a}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 kka system configuration are explained in the Akka documentation. This section only explains the configuration used in the distributed\hich\af200\dbch\af0\loch\f0 
 calculator example. For details of Akka actor system configuration, readers are }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641351\insrsid8278902\delrsid279389 \hich\af200\dbch\af0\loch\f0 suggested }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641351\insrsid279389 \hich\af200\dbch\af0\loch\f0 directed }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 to look at the Akka documentation for the version the}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641351\insrsid420266 \hich\af200\dbch\af0\loch\f0 y}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641351\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 reader }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641352\insrsid420266 \hich\af200\dbch\af0\loch\f0 a\hich\af200\dbch\af0\loch\f0 r
\hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 u\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0 i\hich\af200\dbch\af0\loch\f0 n\hich\af200\dbch\af0\loch\f0 g}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641352\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 u\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0 e}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641351\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 .
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The configuration in Figure X is used for the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 RemoteCreation}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  system in Figure X. The conf\hich\af200\dbch\af0\loch\f0 
iguration overrides three system policies. Firstly, the system enables }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641352\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 distributed communication by replacing the actor reference provider from }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 LocalActorRefProvider}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 RemoteActorRefProvider}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. Secondly, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 deployment}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  block specifies {\*\atrfstart 382853858}that actor }{
\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid420266 {\*\atrfend 382853858}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382853858}{\*\atndate 656641353}\ltrpar \pard\plain \ltrpar
\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 \ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 
\cs74\fs16\insrsid420266 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid14314517 \hich\af200\dbch\af0\loch\f0 singular or plural? 'an actor' or 'actors'}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 created
\hich\af200\dbch\af0\loch\f0  at the logical path }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 /advancedCalculator}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 shall be physically created by the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  CalculatorApplication}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 actor system located at address }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  129.215.91.88:2552}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. Finally, the actor system itself is located at address }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 129.215.91.195:2554}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. In this example, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 129.215.91.\hich\af200\dbch\af0\loch\f2 88}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  129.215.91.195}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  are two IP addresses allocated for the Ethernet connection at the author}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \loch\af0\dbch\af0\hich\f200 \rquote }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 s office. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 2552}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 2554}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  are port numbers that are not used by the two computers used for this test.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMdiscal_distribute_configuration}15{\*\bkmkend BMdiscal_distribute_configuration}: Configuration Example: Distributed Creat\hich\af200\dbch\af0\loch\f0 ion

\par }\pard\plain \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\pagebb\widctlpar\wrapdefault\faauto\ls1\ilvl2\outlinelevel2\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.11.2  A Complete Example
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The classes defined for the example described at the beginning of this section are the followings:
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMdiscal_message}16{\*\bkmkend BMdiscal_message}: Distributed Calculator: Messages and Advanced Calculator
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMdiscal_local_creation}17{\*\bkmkend BMdiscal_local_creation}: Distributed Calculator: Simp\hich\af200\dbch\af0\loch\f0 le Calculator Local Creation
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMdiscal_distribute_creation}18{\*\bkmkend BMdiscal_distribute_creation}: Distributed Calculator: Distributed Creation
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMdiscal_lookup}19{\*\bkmkend BMdiscal_lookup}: Distributed Calculator: Actor Look up
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Operations and Messages
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The Operations (}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 MathOp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 ) considered in this example are addition (}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Add}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
), subtracti\hich\af200\dbch\af0\loch\f0 on (}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Subtract}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ), multiplication (}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Multiply}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ), and division (}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 Divide}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ). There are two types of messages used in this example: the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 
\hich\af200\dbch\af0\loch\f2 CalculatorMessage}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  sent to a real calculator that can compute}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641353\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  an operation; the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 MathResult}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  sent to a broker who receives calculation \hich\af200\dbch\af0\loch\f0 requests and display}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641354\insrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  the result of each calculation.
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Calculators
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The two calculator actors defined in this example are the 
\par }\pard \ltrpar\qj \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 SimpleCalculatorActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  in Figure X and the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 AdvancedCalculatorActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 in Figure X. The simple calculator can compute addition and subtra\hich\af200\dbch\af0\loch\f0 ction while the advanced calculator can compute multiplication and division.
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Test Applications
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 There are three test applications in this example. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 CalApp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  application creates an actor system with name }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  CalculatorApplication}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  located at address }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 129.215.91.\hich\af200\dbch\af0\loch\f2 88:2552}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 . Inside the actor system, a simple calculator is created. The }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 CreationApp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  application creates two actors: one }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 CreationActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 at the local machine and one }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 AdvancedCalculatorActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  at a remote node. The }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  CreationActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  is used as a broker that sends a r\hich\af200\dbch\af0\loch\f0 
equest to the advanced calculator and print}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641354\insrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 the returned result. Finally, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 LookupApp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  application works }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641354\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 as }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 the same as the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 CreationApp}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  except that the remote actor used in this application is the simple calculator fetched from the }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 actorFor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  method.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The ex\hich\af200\dbch\af0\loch\f0 
ample code shows that distributed programming i}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641354\insrsid420266 \hich\af200\dbch\af0\loch\f0 n}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641354\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 TAkka is enabled in the same way as in Akka, that is, by updating the actor system configuration. For an Akka application that enables distributed programming, the same actor system configuration can be reus\hich\af200\dbch\af0\loch\f0 
ed in the corresponding TAkka version.
\par 
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\pagebb\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.{\*\bkmkstart BMalternative_designs}12{\*\bkmkend BMalternative_designs}
  Design Alternatives
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Akka Typed Actor
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 In the Akka library, there is a special class called }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , which contains an internal actor and can be supervised. A service of }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2  TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  class is invoked by method \hich\af200\dbch\af0\loch\f0 invocation instead of message exchanging. Code in Figure X shows how to define a simple string processor using }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641355\insrsid420266 \hich\af200\dbch\af0\loch\f0 a\hich\af200\dbch\af0\loch\f0 n\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Akka typed actor. The Akka }{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  prevent}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641355\insrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  some type errors but }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641355\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 have }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641355\insrsid420266 \hich\af200\dbch\af0\loch\f0 h\hich\af200\dbch\af0\loch\f0 a
\hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641355\insrsid420266 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 two limitations. Firstly, }
{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 TypedActor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  does not permit behaviour upgrade. S\hich\af200\dbch\af0\loch\f0 
econdly, avoiding the type pollution problem, explained in Section X, by using Akka typed actors }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641356\insrsid420266 \hich\af200\dbch\af0\loch\f0 c\hich\af200\dbch\af0\loch\f0 a
\hich\af200\dbch\af0\loch\f0 u\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0 e}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641356\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 i}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 s the same inconvenience as using a simple object-oriented model, where supertypes need to be defined in advance. In Scala and Java, introducing a supertype i\hich\af200\dbch\af0\loch\f0 
n a type hierarchy requires modification to all affected classes, whose source code may not be accessible by application developers.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMakkatypedactor}20{\*\bkmkend BMakkatypedactor}: Akka Example: String Counter using Akka TypedActor
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Actors with or without Internal Mutable States
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 The ac\hich\af200\dbch\af0\loch\f0 tor model formalized by Hewitt et}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \~}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 al. [1973] does not specify its implementation strategy. In Erlang, a functional programming language, actors do not have mutable states. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641356\insrsid420266 
\hich\af200\dbch\af0\loch\f0 I\hich\af200\dbch\af0\loch\f0 t\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 i\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 r\hich\af200\dbch\af0\loch\f0 e
\hich\af200\dbch\af0\loch\f0 c\hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0 m\hich\af200\dbch\af0\loch\f0 m\hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0 n\hich\af200\dbch\af0\loch\f0 d\hich\af200\dbch\af0\loch\f0 e
\hich\af200\dbch\af0\loch\f0 d\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 t\hich\af200\dbch\af0\loch\f0 h\hich\af200\dbch\af0\loch\f0 a\hich\af200\dbch\af0\loch\f0 t\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 t}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641356\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 T}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 he state of an actor, if there is any, }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641357\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 i\hich\af200\dbch\af0\loch\f0 s\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641356\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 recommended to }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 be saved in an }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\i\insrsid8278902 \hich\af200\dbch\af0\loch\f0 ETS}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  table, \hich\af200\dbch\af0\loch\f0 
a data structure provided by the OTP library [Ericsson AB., 2013b]. In Scala, users are free to use mutable variables in code. The TAkka library is built on top of Akka and implemented in Scala. As a result, TAkka does not prevent users from defining acto
\hich\af200\dbch\af0\loch\f0 r\hich\af200\dbch\af0\loch\f0 s with mutable states. Nevertheless, the author of this thesis encourages the use of actors in a functional style, for example encoding the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 sender}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  of a synchronous message as part of the incoming message rather than a state of an actor, because it is diffi
\hich\af200\dbch\af0\loch\f0 cult to synchronize mutable states of replicated actors in a cluster environment.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
In a cluster, resources are replicated at different locations to provide fault-tolerant services. The CAP theorem [CAP] states that it is impossible to achieve consistency, a\hich\af200\dbch\af0\loch\f0 
vailability, and partition tolerance in a distributed system simultaneously. For actors that use mutable state, system providers have to either sacrifice availability or partition tolerance, or modify the consistency model. For example, Akka actors have m
\hich\af200\dbch\af0\loch\f0 u\hich\af200\dbch\af0\loch\f0 table state and Akka cluster developers }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641358\insrsid420266 \hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0 x}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641358\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 pend a great }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641358\insrsid420266 \hich\af200\dbch\af0\loch\f0 d\hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0 a\hich\af200\dbch\af0\loch\f0 l\hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 o
\hich\af200\dbch\af0\loch\f0 f\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 effort to implement an eventual consistency model [Kuhn et}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \~}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 al., 2012]. In contrast, stateless services, e.g. RESTful web services [Fielding}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641373\insrsid5601660 ,
\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641373\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 :}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
2002], are more likely to achieve }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641358\insrsid8278902\delrsid420266 \hich\af200\dbch\af0\loch\f0 a\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0 good scalability and avail\hich\af200\dbch\af0\loch\f0 ability.
\par {\listtext\tab}}\pard\plain \ltrpar\s5\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl4\outlinelevel4\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 
\b\fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Bi-linked Actors
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
In addition to one-way linking in the supervision tree, Erlang and Akka provide a mechanism to define two-way linkage between actors. Bi-linked actors are aware of the liveness of each other. We believe that bi-linked actors are r
\hich\af200\dbch\af0\loch\f0 edundant in a system where supervision is obligatory. Notice that, if the computation of an actor relies on the liveness of another actor, those two actors should be organized in the same supervision tree.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 3.13  Summing Up
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 This chapter presents the design \hich\af200\dbch\af0\loch\f0 
and implementation of the TAkka library. In TAkka, an actor reference is parameterized by the type of the messages expected by the actor. Similarly}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641370\insrsid5601660 ,}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  type parameter is added to the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Actor}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  class, the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Prop}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class and the }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 ActorContext}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  class. The TAkka library use\hich\af200\dbch\af0\loch\f0 
s both static and dynamic type checking so that type errors are detected at the earliest opportunity. To enable look}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641370\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 i
\hich\af200\dbch\af0\loch\f0 n\hich\af200\dbch\af0\loch\f0 g}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 up on remote actor references, TAkka defines a typed name server that keeps maps from typed symbols to values of the corresponding types\hich\af200\dbch\af0\loch\f0 . 
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
The TAkka library adds type checking features to the Akka library but delegates tasks such as actor creation and message passing to the underlying Akka systems. This chapter shows that, by separating the handler}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641371\insrsid5601660 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  for system messages and }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641371\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 the handler for }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0 
ther messages, supervision tree and remote communication can be done in the same way as in the Akka library. 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\pagebb\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\fs40\insrsid8278902 \hich\af200\dbch\af0\loch\f0 Chapter {\*\bkmkstart BMevolution}{\*\bkmkend BMevolution}
4}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\par {\listtext\tab}}\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs40\alang1025 \ltrch\fcs0 
\b\fs40\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Evolution, Not Revolution 
\par }\pard\plain \ltrpar\qj \li0\ri0\sb240\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Akka systems can be smoothly migrated to TAkka systems. In other words, existing systems can evolve to intro\hich\af200\dbch\af0\loch\f0 
duce more types, rather than requiring a revolution where all actors and interactions must be typed.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
The above property is analogous to adding generics to Java programs. Java generics are carefully designed so that programs without generic types can be par\hich\af200\dbch\af0\loch\f0 tially replaced by equivalent generic version}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \cf0\revised\revauth1\revdttm656641372\insrsid5601660 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  (evolution), rather than requiring use}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641372\insrsid5601660 \hich\af200\dbch\af0\loch\f0  \hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0 f}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 generic types everywhere (revolution) }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641372\insrsid5601660 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
Naftalin and Wadler}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641373\insrsid5601660 ,}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641373\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 2006].
\par \hich\af200\dbch\af0\loch\f0 In previous sections, we have seen how to use Akka actors in an Akka system (Figure X) and how to use TAk\hich\af200\dbch\af0\loch\f0 
ka actors in a TAkka system (Figure X). In the following, we will explain how to use TAkka actors in an Akka system and how to use an Akka actor in a TAkka system.
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 4.1  TAkka actor in Akka system
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 It is often the case that an actor-based library is implemen\hich\af200\dbch\af0\loch\f0 ted by one organization but used in a client application implemented by another}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641374\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0  organization}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
. If a developer decided to upgrade the library implementation using TAkka actors, for example, upgrading the Socko Web Server SOCKO, the {\*\atrfstart 382855157}Gatling }{\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid5601660 
{\*\atrfend 382855157}{\*\atnid TW}{\*\atnauthor Timothy Willis}\chatn {\*\annotation{\*\atnref 382855157}{\*\atndate 656641374}\ltrpar \pard\plain \ltrpar\s75\qj \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af24\afs18\alang1081 
\ltrch\fcs0 \fs20\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af24\afs16 \ltrch\fcs0 \cs74\fs16\insrsid5601660 \chatn }{\rtlch\fcs1 \af24 \ltrch\fcs0 \insrsid14314517 \hich\af200\dbch\af0\loch\f0 
I removed a\hich\af200\dbch\af0\loch\f0  doubled\hich\af200\dbch\af0\loch\f0  in\hich\af200\dbch\af0\loch\f0 stance of 'Gatling'}}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641374\insrsid8278902\delrsid5601660 
\hich\af200\dbch\af0\loch\f0 Gatling }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 stress tes\hich\af200\dbch\af0\loch\f0 ting tool, or the core library of the Play framework play\\s\\do6(}{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \fs20\insrsid8278902 \hich\af200\dbch\af0\loch\f0 d}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 )oc as we have done in Section X, how would the upgrade affect}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641375\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 client code, especially legacy applications built using the Akka library?  TAkka actor and actor reference are implemented usin\hich\af200\dbch\af0\loch\f0 g inheritance and delegation respectively so that no changes are required for legacy applications.

\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 TAkka actors inherit}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641375\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 Akka actors. In Figure X, the actor implementation is upgraded to the TAkka version as in Figure X. The client code, line}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641376\insrsid5601660 \hich\af200\dbch\af0\loch\f0 s}{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  15 }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641376\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 through }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\cf0\revised\revauth1\revdttm656641376\insrsid5601660 \hich\af200\dbch\af0\loch\f0 t\hich\af200\dbch\af0\loch\f0 o}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641376\insrsid5601660 \hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 
\af31507 \ltrch\fcs0 \deleted\revauthdel1\revdttmdel656641376\insrsid8278902\delrsid5601660 \hich\af200\dbch\af0\loch\f0 li\hich\af200\dbch\af0\loch\f0 ne }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
25, is the same as the old Akka version}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641376\insrsid5601660 ,}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 as given in Figure X. That is, no changes are required for the client application.
\par \hich\af200\dbch\af0\loch\f0 TAkka actor reference delegates the task of message sending to an Akka actor reference, its }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 untypedRef}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0  field. In line 31 in Figure\hich\af200\dbch\af0\loch\f0  X, we get an untyped actor reference from }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 typedserver}{
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 and use the untyped actor reference in code where an Akka actor reference is expected. Because untyped actor reference accepts messages of any type, messages of unexpected type may be sent to TAkka act\hich\af200\dbch\af0\loch\f0 
ors if Akka actor reference is used. As a result, users who are interested in the }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 UnhandledMessage}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 
\hich\af200\dbch\af0\loch\f0  event may subscribe }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \cf0\revised\revauth1\revdttm656641376\insrsid5601660 \hich\af200\dbch\af0\loch\f0 t\hich\af200\dbch\af0\loch\f0 o\hich\af200\dbch\af0\loch\f0  }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 the event stream as in line 33.
\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMtakkaINakka}1{\*\bkmkend BMtakkaINakka}: TAkka actor in Akka application
\par {\listtext\tab}}\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa120\sl100\slmult0\keepn\widctlpar\wrapdefault\faauto\ls1\ilvl1\outlinelevel1\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs32\alang1025 \ltrch\fcs0 
\b\fs32\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {\rtlch\fcs1 \ab0\af31507\afs24 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 4.2  Akka Actor in TAkka system
\par }\pard\plain \ltrpar\qj \li0\ri0\sb60\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 
\af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Sometimes, developers w\hich\af200\dbch\af0\loch\f0 
ant to update the client code or the API before upgrading the actor implementation. For example, a developer may not have the access to the actor code; or the library may be large, so the developer may want to upgrade the library gradually.
\par }\pard \ltrpar\qj \fi360\li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Users can initi\hich\af200\dbch\af0\loch\f0 
alize a TAkka actor reference by providing an Akka actor reference and a type parameter. In Figure X, we re-use the Akka actor, initialize the actor in an Akka actor system, and obtain}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\deleted\revauthdel1\revdttmdel656641378\insrsid8278902\delrsid7433352 \hich\af200\dbch\af0\loch\f0 e\hich\af200\dbch\af0\loch\f0 d}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 
 an Akka actor reference as in Figure X. Then, we initialize a TAkka a\hich\af200\dbch\af0\loch\f0 ctor reference, }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 takkaServer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid8278902 \hich\af200\dbch\af0\loch\f0 , which only accepts }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 String}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0  messages.

\par }\pard\plain \ltrpar\s47\qc \fi360\li0\ri0\sb120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507\afs24 \ltrch\fcs0 \fs24\insrsid8278902 
\par }\pard\plain \ltrpar\qc \li0\ri0\sl100\slmult0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1081 \ltrch\fcs0 \fs24\lang2057\langfe2052\kerning1\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2052 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 [}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \loch\af2\insrsid8278902 \hich\af200\dbch\af0\loch\f2 Code}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 ]
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\sl100\slmult0\keep\widctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang2057\langfe2057\loch\af0\hich\af200\dbch\af0\cgrid\langnp2057\langfenp2057 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8278902 \hich\af200\dbch\af0\loch\f0 Figure {\*\bkmkstart BMakkaINtakka}2{\*\bkmkend BMakkaINtakka}: Akka actor in TAkka application
\par }{\*\themedata 504b030414000600080000002100828abc13fa0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb6ac3301045f785fe83d0b6d8
72ba28a5d8cea249777d2cd20f18e4b12d6a8f843409c9df77ecb850ba082d74231062ce997b55ae8fe3a00e1893f354e9555e6885647de3a8abf4fbee29bbd7
2a3150038327acf409935ed7d757e5ee14302999a654e99e393c18936c8f23a4dc072479697d1c81e51a3b13c07e4087e6b628ee8cf5c4489cf1c4d075f92a0b
44d7a07a83c82f308ac7b0a0f0fbf90c2480980b58abc733615aa2d210c2e02cb04430076a7ee833dfb6ce62e3ed7e14693e8317d8cd0433bf5c60f53fea2fe7
065bd80facb647e9e25c7fc421fd2ddb526b2e9373fed4bb902e182e97b7b461e6bfad3f010000ffff0300504b030414000600080000002100a5d6a7e7c00000
00360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4fc7060abb08
84a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b63095120f88d94fbc
52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462a1a82fe353
bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f7468656d652f7468
656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b4b0d592c9c
070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b4757e8d3f7
29e245eb2b260a0238fd010000ffff0300504b03041400060008000000210096b5ade296060000501b0000160000007468656d652f7468656d652f7468656d65
312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87615b8116d8
a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad79482a9c04
98f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b5d8a314d3c
94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab999fb7b471
7509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9699640f671
9e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd5868b37a088d1
e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d60cf03ac1a5
193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f9e7ef3f2d1
17d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be15c308d3f2
8acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a99793849c26ae6
6252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d32a423279a
668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2af074481847
bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86e877f0034e
16bafb0e258ebb4faf06b769e888340b103d3311da9750aa9d0a1cd3e4efca31a3508f6d0c5c5c398602f8e2ebc71591f5b616e24dd893aa3261fb44f95d843b
5974bb5c04f4edafb95b7892ec1108f3f98de75dc97d5772bdff7cc95d94cf672db4b3da0a6557f70db629362d72bcb0431e53c6066acac80d699a6409fb44d0
8741bdce9c0e4971624a2378cceaba830b05366b90e0ea23aaa241845368b0eb9e2612ca8c742851ca251ceccc70256d8d87265dd96361531f186c3d9058edf2
c00eafe8e1fc5c509031bb4d680e9f39a3154de0accc56ae644441edd76156d7429d995bdd88664a9dc3ad50197c38af1a0c16d684060441db02565e85f3b966
0d0713cc48a0ed6ef7dedc2dc60b17e92219e180643ed27acffba86e9c94c78ab90980d8a9f0913ee49d62b512b79626fb06dccee2a432bbc60276b9f7dec44b
7904cfbca4f3f6443ab2a49c9c2c41476dafd55c6e7ac8c769db1bc399161ee314bc2e75cf8759081743be1236ec4f4d6693e5336fb672c5dc24a8c33585b5fb
9cc24e1d4885545b58463634cc5416022cd19cacfccb4d30eb45296023fd35a458598360f8d7a4003bbaae25e331f155d9d9a5116d3bfb9a95523e51440ca2e0
088dd844ec6370bf0e55d027a012ae264c45d02f708fa6ad6da6dce29c255df9f6cae0ec38666984b372ab5334cf640b37795cc860de4ae2816e95b21be5ceaf
8a49f90b52a51cc6ff3355f47e0237052b81f6800fd7b802239daf6d8f0b1571a8426944fdbe80c6c1d40e8816b88b8569082ab84c36ff0539d4ff6dce591a26
ade1c0a7f669880485fd484582903d284b26fa4e2156cff62e4b9265844c4495c495a9157b440e091bea1ab8aaf7760f4510eaa69a6465c0e04ec69ffb9e65d0
28d44d4e39df9c1a52ecbd3607fee9cec7263328e5d661d3d0e4f62f44acd855ed7ab33cdf7bcb8ae889599bd5c8b3029895b6825696f6af29c239b75a5bb1e6
345e6ee6c28117e73586c1a2214ae1be07e93fb0ff51e133fb65426fa843be0fb515c187064d0cc206a2fa926d3c902e907670048d931db4c1a44959d366ad93
b65abe595f70a75bf03d616c2dd959fc7d4e6317cd99cbcec9c58b34766661c7d6766ca1a9c1b327531486c6f941c638c67cd22a7f75e2a37be0e82db8df9f30
254d30c1372581a1f51c983c80e4b71ccdd28dbf000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d652f74
68656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d363f24
51eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e3198
720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9850528
a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100828abc13fa0000001c0200001300000000000000000000000000
000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000000000
002b0100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000140200007468
656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210096b5ade296060000501b000016000000000000000000
00000000d10200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000000000
00000000000000009b0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000960a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 1;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 2;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 3;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 4;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 5;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;
\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdunhideused0 \lsdlocked0 footnote text;\lsdunhideused0 \lsdlocked0 header;
\lsdunhideused0 \lsdlocked0 footer;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 caption;\lsdunhideused0 \lsdlocked0 endnote reference;\lsdunhideused0 \lsdlocked0 endnote text;\lsdunhideused0 \lsdlocked0 List;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 Title;\lsdunhideused0 \lsdlocked0 Default Paragraph Font;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;
\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;
\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 0105000002000000180000004d73786d6c322e534158584d4c5265616465722e352e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffffec69d9888b8b3d4c859eaf6cd158be0f00000000000000000000000000af
67a32842cf01feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}