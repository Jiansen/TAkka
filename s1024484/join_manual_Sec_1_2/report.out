\BOOKMARK [1][-]{section.1}{Using the Library}{}
\BOOKMARK [2][-]{subsection.1.1}{Sending messages via channels}{section.1}
\BOOKMARK [2][-]{subsection.1.2}{Grouping join patterns}{section.1}
\BOOKMARK [2][-]{subsection.1.3}{Distributed computation}{section.1}
\BOOKMARK [1][-]{section.2}{Implementation Details}{}
\BOOKMARK [2][-]{subsection.2.1}{Case Statement, Extractor Objects and Pattern Matching in Scala}{section.2}
\BOOKMARK [2][-]{subsection.2.2}{Implementing local channels}{section.2}
\BOOKMARK [2][-]{subsection.2.3}{Implementing the join pattern using extractor objects}{section.2}
\BOOKMARK [2][-]{subsection.2.4}{Implementing distributed join calculus}{section.2}
\BOOKMARK [1][-]{section.3}{Limitations and Future Improvements}{}
\BOOKMARK [2][-]{subsection.3.1}{Assumption on linear pattern}{section.3}
\BOOKMARK [2][-]{subsection.3.2}{Limited number of patterns in a single join definition}{section.3}
\BOOKMARK [2][-]{subsection.3.3}{Unnatural usages of synchronous channels}{section.3}
\BOOKMARK [2][-]{subsection.3.4}{Straightforward implementation for synchronous channels}{section.3}
\BOOKMARK [2][-]{subsection.3.5}{Type of the join pattern and the unapply methods}{section.3}
